import json

# from torchnlp.word_to_vector import FastText
wv = {"1": [0.08368675, 0.24712944],
      "1/2": [-0.06133823,  0.08934636],
      "1/3": [ 0.15351366, -0.07764667],
      "1/4": [-0.20899321,  0.03533838],
      "100g": [-0.0583833 , -0.04004558],
      "2": [-0.06621695,  0.0132576 ],
      "2/3": [ 0.00763492, -0.00861307],
      "4": [ 0.42352712, -0.06909981],
      "5": [-0.04556308,  0.05380558],
      "500ml": [ 0.15738203, -0.089323  ],
      "600g": [ 0.06385428, -0.04931971],
      "600ml": [0.23789372, 0.02745757],
      "are": [-0.06835962, -0.02218638],
      "beat": [-0.0756724 , -0.07823247],
      "beef": [-0.07042557, -0.02333186],
      "boils,": [ 0.03822633, -0.1027146 ],
      "bowl": [-0.02129431, -0.0578173 ],
      "breast": [ 0.01213998, -0.03449621],
      "breast,": [0.0410694 , 0.00040421],
      "butter": [-0.04271166, -0.01084549],
      "can": [ 0.2347609 , -0.01229328],
      "canned": [-0.07623706, -0.05475431],
      "carrot": [-0.06366082,  0.07728363],
      "carrot,": [-0.0616261 ,  0.02071406],
      "cheddar": [-0.02789168, -0.07421966],
      "cheese": [-0.04282277, -0.03273478],
      "chicken": [-0.08721476,  0.02906916],
      "chili": [ 0.0796381 , -0.03221061],
      "chop": [0.06432899, 0.05505997],
      "chopped": [ 0.06858375, -0.03167363],
      "cooked": [-0.12721877,  0.06892315],
      "cooked,": [-0.05207529,  0.03075606],
      "cubed": [-0.07736565, -0.00205866],
      "curry": [0.01517761, 0.06247483],
      "degreased": [ 0.0001023 , -0.04894186],
      "dice": [-0.0373091 , -0.11564755],
      "diced": [ 0.09514967, -0.06749031],
      "drizzle": [-0.07326217,  0.03940968],
      "each": [-0.16269742, -0.07517413],
      "eggs": [0.01381342, 0.07598609],
      "eight": [-0.13511522, -0.08570851],
      "fried": [0.08041767, 0.09166622],
      "garlic": [0.02359143, 0.03908374],
      "garlic,": [ 0.03421626, -0.0215857 ],
      "half": [0.08160537, 0.082547  ],
      "ham": [ 0.08929885, -0.17528988],
      "heat": [-0.06893452, -0.15251298],
      "high": [-0.06376198, -0.18824285],
      "ingredients": [-0.00949775,  0.05769804],
      "into": [-0.10031975,  0.04282726],
      "is": [ 0.06587347, -0.00435712],
      "it": [ 0.17389804, -0.05996718],
      "japanese": [ 0.05380103, -0.01019137],
      "kimchi": [0.05087103, 0.15105897],
      "meat": [-0.07929526, -0.12328456],
      "medium": [-0.03912936, -0.10371283],
      "melt": [-0.03125133, -0.09575951],
      "milk": [0.04869986, 0.0824855 ],
      "minced": [-0.0466541 ,  0.02681327],
      "mixture": [-0.08755402,  0.04628667],
      "oil": [0.0236838 , 0.01323684],
      "omelet": [ 0.00533545, -0.04651613],
      "one": [-0.07800456,  0.00527082],
      "onion": [0.00616062, 0.06165927],
      "onion,": [-0.07990596,  0.08723871],
      "over": [0.0432381 , 0.00733583],
      "oyster": [0.00335343, 0.05526499],
      "pan": [0.05900941, 0.19773303],
      "pepper": [ 0.02215849, -0.01147973],
      "piece": [-0.02323783, -0.01347109],
      "pieces": [0.06169808, 0.03646   ],
      "pimento": [ 0.01413036, -0.06527667],
      "potato": [ 0.07401296, -0.08513044],
      "potato,": [ 0.03448638, -0.01967704],
      "potatoes": [ 0.01361376, -0.02348107],
      "pour": [ 0.03460965, -0.05906783],
      "powder": [-0.01098822, -0.00148432],
      "put": [-0.03744126, -0.24490154],
      "rice": [-0.08965711, -0.15162128],
      "roll": [-0.01389933, -0.06487475],
      "rolled": [-0.09814221, -0.07739273],
      "salt": [0.13084689, 0.04800678],
      "sauce": [-0.01611066, -0.05832798],
      "season": [-0.07940961,  0.05695615],
      "sesame": [-0.06716639,  0.15471505],
      "several": [-0.06266387,  0.00716674],
      "shredded": [-0.06961823, -0.04801321],
      "shrimp": [-0.056249  ,  0.02838206],
      "simmer": [-0.06629018,  0.06492919],
      "slice": [ 0.06966937, -0.00772059],
      "sliced": [0.08876906, 0.03258399],
      "soy": [-0.09725188, -0.06104879],
      "split": [ 0.01887938, -0.032366  ],
      "spoon": [ 0.11776841, -0.14958067],
      "spoons": [ 0.07895282, -0.10385938],
      "spring": [-0.01515859, -0.01197072],
      "stew": [ 0.06508688, -0.07067006],
      "stir": [ 0.08895529, -0.16744775],
      "stir-fry": [-0.01309536, -0.04512255],
      "sugar": [ 0.06310337, -0.07270518],
      "taste": [-0.12390836,  0.01553701],
      "teaspoon": [ 0.01369768, -0.05887809],
      "thoroughly": [-0.08559202, -0.0080932 ],
      "three": [-0.10003889,  0.02834038],
      "times": [-0.07087738, -0.02822488],
      "tuna": [-0.09818877,  0.10968442],
      "two": [ 0.06959613, -0.0555049 ],
      "vegetable": [-0.1040728, -0.1226778],
      "water": [0.02372924, 0.0417624 ],
      "when": [-0.0796878 ,  0.11014508],
      "with": [-0.02198691,  0.07841785],
      "wok": [-0.10429911, -0.00700646],
      "zucchini": [-0.05300794,  0.05946864]}


def data_load(order, file_path="fasttext_data.json"):
    f = open(file_path)
    data = json.load(f)
    ingre_wv = []
    ingre_wv_entire = []
    recipe_wv = []
    recipe_wv_entire = []
    menu_wv = []
    menu_wv_entire = []
    ingredients = data[order]['ingredients']
    title = data[order]['title']
    instructions = data[order]['instructions']
    for ing in range(len(ingredients)):
        ingre = ingredients[ing]['text'].split(" ")
        for w in ingre:
            wvec = wv[w]
            ingre_wv.append(wvec)
        ingre_wv_entire.append(ingre_wv)
        ingre_wv = []
    for ins in range(len(instructions)):
        instr = instructions[ins]['text'].split(" ")
        for w in instr:
            wvec = wv[w]
            recipe_wv.append(wvec)
        recipe_wv_entire.append(recipe_wv)
        recipe_wv = []
    for w in title.split(" "):
        wvec = wv[w]
        menu_wv.append(wvec)
    menu_wv_entire.append(menu_wv)
    return menu_wv_entire, ingre_wv_entire, recipe_wv_entire

if __name__ == '__main__':
    data_load(order=0)
    data_load(order=1)
    data_load(order=2)
    data_load(order=3)
    data_load(order=4)
    data_load(order=5)
    data_load(order=6)
    data_load(order=7)
    data_load(order=8)
    data_load(order=9)
    data_load(order=10)
    data_load(order=11)
    print("done")



